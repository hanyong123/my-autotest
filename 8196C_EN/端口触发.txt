*** Settings ***
Suite Setup       Run Keywords    打开浏览器    AND    转到端口触发页面
Suite Teardown    关闭浏览器
Resource          keyword.txt

*** Variables ***
@{port}           1    2    3    4    5    6    7
...               8    9    10    11    12    13    14
...               15    16    17

*** Test Cases ***
PortTri_RuleName_test_1
    [Documentation]    *规则名称允许为空，为空时能够保存成功；规则列表中展示出的该条规则的规则名为空*
    [Setup]    删除所有端口触发条目并显示成功消息
    [Template]
    验证规则名    ${EMPTY}    ${common_unlock_save}
    端口触发列表第${row}行第${col}列是${string}    1    2    ${EMPTY}

PortTri_RuleName_test_2
    [Documentation]    *规则名称输入数据带有 '"\或空格 ，提示“ 不能含有特殊字符 \ '"\和空格 ”*
    [Template]    验证规则名
    '    ${common_string_null_err}
    \\    ${common_string_null_err}
    "    ${common_string_null_err}

PortTri_RuleNameMaxLen_test_3
    [Documentation]    *规则名长度最大31个字符，超过31字符无法输入*
    [Template]    验证规则名最大长度
    fdsafdsafgdsafdsfdsafdsssssssssssdfdsafdsafdsafdsa    31

PortTri_RuleName_test_4
    [Documentation]    *规则名输入30个字符，再输入一个中文，导致超过31个字符，提示“规则名过长，已经自动截断”。*
    [Template]
    删除所有端口触发条目并显示成功消息
    验证规则名    abcdefghijklmnopqrstuvwxyz1234你    ${common_unlock_save}
    端口触发列表第${row}行第${col}列是${string}    1    2    abcdefghijklmnopqrstuvwxyz1234

PortTri_TriPort_test_5
    [Documentation]    *触发端口起始端口不能为空*
    [Template]    验证触发端口
    ${empty}    ${empty}    ${common_port_err}
    \    \    ${common_port_err}
    ${empty}    2123    ${common_port_err}

PortTri_TriPort_test_6
    [Documentation]    *触发端口结束端口可以为空；当起始端口不为空，而结束端口为空时，表示触发端口为起始端口的值。*
    删除所有端口触发条目并显示成功消息
    验证触发端口    8888    ${EMPTY}    ${common_unlock_save}
    端口触发列表第${row}行第${col}列是${string}    1    4    8888-8888

PortTri_ForwardPort_test_7
    [Documentation]    *转发端口起始端口不能为空*
    [Template]    验证转发端口
    ${EMPTY}    123    ${common_port_err}
    \    \    ${common_port_err}

PortTri_ForwardPort_test_8
    [Documentation]    *转发端口结束端口可以为空*
    [Template]
    删除所有端口触发条目并显示成功消息
    验证转发端口    1234    \    ${common_unlock_save}
    端口触发列表第${row}行第${col}列是${string}    1    6    1234-1234

PortTri_TriPortMAXLen_test_9
    [Documentation]    *触发端口起始端口超过5个字符后，无法输入*
    [Template]
    验证端口触发的端口长度    app_port_start    243243242    5

PortTri_TriPortMAXLen_test_10
    [Documentation]    *触发端口结束端口超过5个字符后，无法输入*
    [Template]
    验证端口触发的端口长度    app_port_end    243243242    5
    [Teardown]

PortTri_TriPortMAXLen_test_11
    [Documentation]    *转发端口起始端口超过5个字符后，无法输入*
    验证端口触发的端口长度    forward_port_start    243243242    5

PortTri_TriPortMAXLen_test_12
    [Documentation]    *转发端口结束端口超过5个字符后，无法输入*
    验证端口触发的端口长度    forward_port_end    243243242    5

PortTri_TriPortRange_test_13
    [Documentation]    *触发端口起始端口，数字不在1~65535的范围内，提示端口范围为1~65535*
    [Template]    验证触发端口
    0    \    ${common_port_err}
    -1213    \    ${common_port_err}
    65536    \    ${common_port_err}
    80000    \    ${common_port_err}

PortTri_TriPortRange_test_14
    [Documentation]    *触发端口结束端口，数字不在1~65535的范围内，提示端口范围为1~65535*
    [Template]    验证触发端口
    1    0    ${common_port_err}
    1    -1213    ${common_port_err}
    1    65536    ${common_port_err}
    1    65537    ${common_port_err}
    1    80000    ${common_port_err}

PortTri_ForwardPortRange_test_15
    [Documentation]    *转发端口起始端口，数字不在1~65535的范围内，提示端口范围为1~65535*
    [Template]    验证转发端口
    0    \    ${common_port_err}
    -1213    \    ${common_port_err}
    65536    \    ${common_port_err}
    80000    \    ${common_port_err}

PortTri_ForwardPortRange_test_16
    [Documentation]    *转发端口结束端口，数字不在1~65535的范围内，提示端口范围为1~65535*
    [Template]    验证转发端口
    1    0    ${common_port_err}
    1    -1213    ${common_port_err}
    1    65536    ${common_port_err}
    1    80000    ${common_port_err}

PortTri_TriPortRange_test_17
    [Documentation]    *触发端口起始端口，端口不为正整数，提示不能含有非数字字符*
    [Template]    验证触发端口
    \\    \    ${common_port_err}
    '    \    ${common_port_err}
    "    \    ${common_port_err}
    =_{}    \    ${common_port_err}
    @`~    \    ${common_port_err}
    a    \    ${common_port_err}
    A    \    ${common_port_err}
    12#2    \    ${common_port_err}
    12%2    \    ${common_port_err}
    100 0    \    ${common_port_err}

PortTri_TriPortRange_test_18
    [Documentation]    *触发端口结束端口，端口不为正整数，提示不能含有非数字字符*
    [Template]    验证触发端口
    1    \\    ${common_port_err}
    1    '    ${common_port_err}
    1    "    ${common_port_err}
    1    =_{}    ${common_port_err}
    1    @`~    ${common_port_err}
    1    a    ${common_port_err}
    1    A    ${common_port_err}
    1    12#2    ${common_port_err}
    1    12%2    ${common_port_err}
    1    100 0    ${common_port_err}

PortTri_ForwardPortRange_test_19
    [Documentation]    *转发端口起始端口，端口不为正整数，提示不能含有非数字字符*
    [Template]    验证转发端口
    \\    \    ${common_port_err}
    '    \    ${common_port_err}
    "    \    ${common_port_err}
    =_{}    \    ${common_port_err}
    @`~    \    ${common_port_err}
    a    \    ${common_port_err}
    A    \    ${common_port_err}
    12#2    \    ${common_port_err}
    12%2    \    ${common_port_err}
    100 0    \    ${common_port_err}

PortTri_ForwardPortRange_test_20
    [Template]    验证转发端口
    1    \\    ${common_port_err}
    1    '    ${common_port_err}
    1    "    ${common_port_err}
    1    =_{}    ${common_port_err}
    1    @`~    ${common_port_err}
    1    a    ${common_port_err}
    1    A    ${common_port_err}
    1    12#2    ${common_port_err}
    1    12%2    ${common_port_err}
    1    100 0    ${common_port_err}

PortTri_TriPortCmp_test_21
    [Documentation]    *设置触发端口的起始端口小于结束端口，保存成功*
    删除所有端口触发条目并显示成功消息
    验证触发端口    222    333    ${common_unlock_save}
    端口触发列表第${row}行第${col}列是${string}    1    4    222-333

PortTri_TriPortCmp_test_22
    删除所有端口触发条目并显示成功消息
    验证触发端口    222    222    ${common_unlock_save}
    端口触发列表第${row}行第${col}列是${string}    1    4    222-222

PortTri_TriPortCmp_test_23
    [Documentation]    *设置触发端口的起始端口大于结束端口，保存失败，提示“起始端口不能大于结束端口”*
    验证触发端口    123    34    ${common_cmp_port_err}

PortTri_ForwardPortCmp_test_24
    [Documentation]    *设置转发端口的起始端口小于结束端口，保存成功*
    删除所有端口触发条目并显示成功消息
    验证转发端口    222    333    ${common_unlock_save}
    端口触发列表第${row}行第${col}列是${string}    1    6    222-333

PortTri_ForwardPortCmp_test_25
    [Documentation]    *设置转发端口的起始端口等于结束端口，保存成功*
    删除所有端口触发条目并显示成功消息
    验证转发端口    1234    1234    ${common_unlock_save}
    端口触发列表第${row}行第${col}列是${string}    1    6    1234-1234

PortTri_ForwardPortCmp_test_26
    [Documentation]    *设置转发端口的起始端口大于结束端口，保存失败，提示“起始端口不能大于结束端口”*
    验证转发端口    10000    9999    ${common_cmp_port_err}

PortTri_TotalItem_test_28
    [Documentation]    *端口触发条目总数超过10条，不能再添加新的条目，提示端口触发条目已满*
    验证条目总数    16

PortTri_ModifiItem_test_30
    [Documentation]    *成功修改一条条目，自动刷新后改变*
    [Setup]    删除所有端口触发条目并显示成功消息
    保存两个条目
    #修改并验证第二行条目
    验证修改${row}条目    2    11    UDP    121    121    UDP
    ...    121    121    ${common_unlock_save}
    验证${row}所有列包含的string    2    11    UDP    121-121    UDP    121-121
    #修改并验证第一行条目
    验证修改${row}条目    1    22    TCP    131    200    TCP
    ...    131    300    ${common_unlock_save}
    验证${row}所有列包含的string    1    22    TCP    131-200    TCP    131-300

PortTri_ModifiItem_test_32
    [Documentation]    *添加一条条目，内容和已添加条目中的一条条目存在以下内容的全部重复：｛协议、触发端口、转发端口｝，提示条目已存在，添加失败。*
    [Setup]    删除所有端口触发条目并显示成功消息
    保存两个条目
    #验证修改触发端口条目
    验证修改${row}条目    2    11    UDP    1    13    UDP
    ...    121    121    ${common_port_occupy_err}
    验证修改${row}条目    2    11    UDP    11    15    UDP
    ...    121    121    ${common_port_occupy_err}
    验证修改${row}条目    2    11    UDP    13    15    UDP
    ...    121    121    ${common_port_occupy_err}
    #验证修改转发端口条目
    验证修改${row}条目    2    11    TCP    12    12    UDP
    ...    1    13    ${common_port_occupy_err}
    验证修改${row}条目    2    11    TCP    12    12    UDP
    ...    11    15    ${common_port_occupy_err}
    验证修改${row}条目    2    11    TCP    12    12    UDP
    ...    13    15    ${common_port_occupy_err}

PortTri_DelItem_test_33
    [Setup]    删除所有端口触发条目并显示成功消息
    保存两个条目
    删除端口触发表里第${row}行显示成功消息${message}    2    ${common_unlock_delete}

PortTri_SameItem_test_29
    [Documentation]    *添加一条条目，内容和已添加条目中的一条条目存在以下内容的全部重复：｛协议、触发端口、转发端口｝，提示条目已存在，添加失败。
    ...    *
    #*验证触发协议为TCP的触发端口重复*
    删除所有端口触发条目并显示成功消息
    验证触发端口重复    TCP    200    500    2345    ${common_unlock_save}
    验证触发端口重复    TCP    200    \    1234    ${common_port_occupy_err}
    验证触发端口重复    TCP    190    200    1234    ${common_port_occupy_err}
    验证触发端口重复    TCP    190    300    1234    ${common_port_occupy_err}
    验证触发端口重复    TCP    210    300    1234    ${common_port_occupy_err}
    验证触发端口重复    TCP    300    1000    1234    ${common_port_occupy_err}
    验证触发端口重复    TCP    500    1000    1234    ${common_port_occupy_err}
    验证触发端口重复    TCP    190    1000    1234    ${common_port_occupy_err}
    #*验证触发协议为UDP的触发端口重复*
    删除所有端口触发条目并显示成功消息
    验证触发端口重复    UDP    200    500    2345    ${common_unlock_save}
    验证触发端口重复    UDP    200    \    1234    ${common_port_occupy_err}
    验证触发端口重复    UDP    190    200    1234    ${common_port_occupy_err}
    验证触发端口重复    UDP    190    300    1234    ${common_port_occupy_err}
    验证触发端口重复    UDP    210    300    1234    ${common_port_occupy_err}
    验证触发端口重复    UDP    300    1000    1234    ${common_port_occupy_err}
    验证触发端口重复    UDP    500    1000    1234    ${common_port_occupy_err}
    验证触发端口重复    UDP    190    1000    1234    ${common_port_occupy_err}
    #*验证转发协议为TCP的转发端口重复*
    删除所有端口触发条目并显示成功消息
    验证转发端口重复    2000    TCP    200    500    ${common_unlock_save}
    验证转发端口重复    2001    TCP    200    \    ${common_port_occupy_err}
    验证转发端口重复    2001    TCP    190    200    ${common_port_occupy_err}
    验证转发端口重复    2001    TCP    190    300    ${common_port_occupy_err}
    验证转发端口重复    2001    TCP    210    300    ${common_port_occupy_err}
    验证转发端口重复    2001    TCP    300    1000    ${common_port_occupy_err}
    验证转发端口重复    2001    TCP    500    1000    ${common_port_occupy_err}
    验证转发端口重复    2001    TCP    190    1000    ${common_port_occupy_err}
    #*验证转发协议为UDP的转发端口重复*
    删除所有端口触发条目并显示成功消息
    验证转发端口重复    2000    UDP    200    500    ${common_unlock_save}
    验证转发端口重复    2001    UDP    200    \    ${common_port_occupy_err}
    验证转发端口重复    2001    UDP    190    200    ${common_port_occupy_err}
    验证转发端口重复    2001    UDP    190    300    ${common_port_occupy_err}
    验证转发端口重复    2001    UDP    210    300    ${common_port_occupy_err}
    验证转发端口重复    2001    UDP    300    1000    ${common_port_occupy_err}
    验证转发端口重复    2001    UDP    500    1000    ${common_port_occupy_err}
    验证转发端口重复    2001    UDP    190    1000    ${common_port_occupy_err}
    #*成功保存触发端口相同但是协议不同的条目*
    删除所有端口触发条目并显示成功消息
    验证触发端口重复    TCP    200    500    2345    ${common_unlock_save}
    验证触发端口重复    UDP    200    500    1234    ${common_unlock_save}
    #*成功保存转发端口相同但是协议不同的条目*
    删除所有端口触发条目并显示成功消息
    验证转发端口重复    2000    UDP    200    500    ${common_unlock_save}
    验证转发端口重复    2001    TCP    200    500    ${common_unlock_save}

*** Keywords ***
验证规则名
    [Arguments]    ${rule}    ${message}
    设置端口触发参数    ${None}    ${rule}    TCP    222    222    TCP
    ...    1234    1234
    显示消息    ${message}

验证规则名最大长度
    [Arguments]    ${rule}    ${maxlen}
    验证输入框最大输入长度    app_name    ${rule}    ${maxlen}

验证触发端口
    [Arguments]    ${start_port}    ${end_port}    ${message}
    设置端口触发参数    ${None}    rulename    TCP    ${start_port}    ${end_port}    TCP
    ...    1234    1234
    显示消息    ${message}

端口触发列表里含有${string}
    [Arguments]    ${string}
    Table Should Contain    xpath=//table[@class="df_tab"]    ${string}

端口触发列表第${row}行第${col}列是${string}
    [Arguments]    ${row}    ${col}    ${string}
    ${row}    Evaluate    int(${row})+1
    ${v}    Get Table Cell    xpath=//table[@class="df_tab"]    ${row}    ${col}
    Should Be Equal    ${v}    ${string}

删除所有端口触发条目并显示成功消息
    Click Element    id=del_app_port_all
    Choose Ok On Next Confirmation
    ${common_del_tip}    Confirm Action
    显示消息    ${common_unlock_delete}

验证转发端口
    [Arguments]    ${start_port}    ${end_port}    ${message}
    设置端口触发参数    ${None}    rulename    TCP    222    222    TCP
    ...    ${start_port}    ${end_port}
    显示消息    ${message}

验证端口触发的端口长度
    [Arguments]    ${id}    ${port}    ${maxlen}
    验证输入框最大输入长度    ${id}    ${port}    ${maxlen}

验证条目总数
    [Arguments]    ${item_num}
    删除所有端口触发条目并显示成功消息
    : FOR    ${i}    IN    @{port}
    \    设置端口触发参数    ${None}    ${i}    TCP    ${i}    ${EMPTY}
    \    ...    TCP    ${i}    ${EMPTY}
    \    run keyword if    '${i}'=='${${item_num}+1}'    显示消息    ${common_item_err}
    \    run keyword if    '${i}'=='${${item_num}+2}'    Exit For Loop    \    ${EMPTY}
    \    run keyword if    '${i}'!='${${item_num}+1}'    显示消息    ${common_unlock_save}
    \    sleep    2s

验证触发端口重复
    [Arguments]    ${tri_pro}    ${triport_start}    ${triport_end}    ${forward_port}    ${message}
    设置端口触发参数    ${None}    rulename    ${tri_pro}    ${triport_start}    ${triport_end}    TCP
    ...    ${forward_port}    ${EMPTY}
    显示消息    ${message}

验证转发端口重复
    [Arguments]    ${triport_start}    ${forward_pro}    ${forward_start}    ${forward_end}    ${message}
    设置端口触发参数    ${None}    rulename    TCP    ${triport_start}    ${EMPTY}    ${forward_pro}
    ...    ${forward_start}    ${forward_end}
    显示消息    ${message}

点击端口触发表里第${row}行修改按钮
    [Arguments]    ${row}
    Click Element    xpath=(//div[@id='${${row}-1}'])[1]

验证${row}所有列包含的string
    [Arguments]    ${row}    ${rule_name}    ${tri_pro}    ${tri_prort}    ${forward_pro}    ${forward_port}
    端口触发列表第${row}行第${col}列是${string}    ${row}    2    ${rule_name}
    端口触发列表第${row}行第${col}列是${string}    ${row}    3    ${tri_pro}
    端口触发列表第${row}行第${col}列是${string}    ${row}    4    ${tri_prort}
    端口触发列表第${row}行第${col}列是${string}    ${row}    5    ${forward_pro}
    端口触发列表第${row}行第${col}列是${string}    ${row}    6    ${forward_port}

保存两个条目
    设置端口触发参数    ${None}    1    TCP    12    12    TCP
    ...    12    12
    sleep    2s
    设置端口触发参数    ${None}    2    UDP    13    13    UDP
    ...    13    13
    sleep    2s

验证修改${row}条目
    [Arguments]    ${row}    ${rule_name}    ${tri_pro}    ${triport_start}    ${triport_end}    ${forward_pro}
    ...    ${forwardprot_start}    ${forwardprot_end}    ${message}
    点击端口触发表里第${row}行修改按钮    ${row}
    设置端口触发参数    ${None}    ${rule_name}    ${tri_pro}    ${triport_start}    ${triport_end}    ${forward_pro}
    ...    ${forwardprot_start}    ${forwardprot_end}
    显示消息    ${message}

删除端口触发表里第${row}行显示成功消息${message}
    [Arguments]    ${row}    ${message}
    Click Element    xpath=(//div[@id='${${row}-1}'])[2]
    显示消息    ${message}
